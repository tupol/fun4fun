<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.0.xsd
	http://www.springframework.org/schema/oxm 
	http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- ############# Spring Imports ############# -->

	<!-- ############# User Configuration ############# -->

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:org/tupol/sample_1/configuration.properties
				</value>
			</list>
		</property>
	</bean>

	<!-- ############# Hibernate session and transaction Beans ############# -->

	<!-- DataSource Property -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.databaseUrl}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Database Property -->
	<bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.jdbc.batch_size">20</prop>
			</props>
		</property>
	</bean>

	<!-- Session Factory Wiring (datasource, hibernate mapping and properties) -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties" ref="hibernateProperties" />
		<property name="mappingResources">
			<list>
				<value>org/tupol/sample_1/Sample.hbm.xml</value>
			</list>
		</property>
	</bean>


	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- ensure that the above transactional advice runs for any execution of 
		an operation defined in the sample package -->
	<aop:config>
		<aop:pointcut id="samplePointCut"
			expression="execution(* org.tupol.sample_1..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="samplePointCut" />
	</aop:config>

	<!-- ############# DAO Beans ############# -->

	<bean id="customerDao" scope="singleton"
		class="org.tupol.sample_1.dao.CustomerDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="orderDao" scope="singleton"
		class="org.tupol.sample_1.dao.OrderDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- ############# Sample App ############# -->

	<bean id="sampleApp" scope="singleton" class="org.tupol.sample_1.SampleApp">
		<property name="customerDao" ref="customerDao" />
		<property name="orderDao" ref="orderDao" />
	</bean>

</beans>
